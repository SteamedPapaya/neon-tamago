name: Deploy Spring Boot App to EC2 using Docker

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      # 환경 변수 설정 및 테스트
      - name: Test with Gradle
        run: ./gradlew test
        env:
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USERNAME: ${{ secrets.MYSQL_USERNAME }}
          MYSQL_DATASOURCE_URL: ${{ secrets.MYSQL_DATASOURCE_URL }}

      # 빌드 진행
      - name: Build with Gradle
        run: ./gradlew clean build
        env:
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USERNAME: ${{ secrets.MYSQL_USERNAME }}
          MYSQL_DATASOURCE_URL: ${{ secrets.MYSQL_DATASOURCE_URL }}

      # Docker 이미지 빌드
      - name: Build Docker Image
        run: docker build -t neon-tamago:latest .

      # Docker Compose 파일을 EC2로 전송
      - name: Copy Docker Compose to EC2
        uses: appleboy/scp-action@v0.1.5  # 최신 버전 사용
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "docker-compose.yml"
          target: "~/spring-app/"

      # SSH로 EC2에 접속하여 Docker Compose 실행
      - name: SSH and deploy with Docker Compose
        uses: appleboy/ssh-action@v0.1.5  # 최신 버전 사용
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}  # SSH 프라이빗 키
          port: 22
          script: |
            ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -t ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
              cd ~/spring-app/
              export MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}
              export MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}
              export MYSQL_USERNAME=${{ secrets.MYSQL_USERNAME }}
              docker-compose down
              docker-compose up -d --build
            EOF
          debug: true  # 디버그 모드 활성화